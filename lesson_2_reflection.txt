Q: What happens when you initialize a repository? Why do you need to do it?
A: git initalises the repository and adds the hidden .git file. This is necessary to start the version control.

Q: How is the staging area different from the working directory and the repository? What value do you think it offers?
A: staging area changes can be commited to the master or not, this is good to test new features

Q: How can you use the staging area to make sure you have one commit per logical change?
A: You can check what changes there are in the staging area before you commit, using git diff --staged will compare the most
  recent commit to the staging area. git diff will compare the working directory with the staging area

Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?
A: Branches are useful when testing out experimental features that you are not sure you want in the master branch already.

Q: How do the diagrams help you visualize the branch structure?
A: Helps because git log output is somewhat crpytpic to read and you can draw branches more clearly.

Q: What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
A: Merging combines the two branches. This means that all commits will show in the git log.

Q:What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
A: pro - automatic merging is fast, complete and easy but con can't understand what the code is trying to do. manually merging takes more time is also error prone.
